"""initial migrate - id fields corrected

Revision ID: cbce88b02f0a
Revises: 
Create Date: 2018-08-06 15:36:07.969480

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cbce88b02f0a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('DatasetGroup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datasetGroupName', sa.String(), nullable=True),
    sa.Column('datasetGroupCreator', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('password', sa.String(length=1000), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('utype', sa.Integer(), nullable=True),
    sa.Column('af', sa.Integer(), nullable=True),
    sa.Column('bs', sa.Integer(), nullable=True),
    sa.Column('profilePic', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('BlogPost',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('postTitle', sa.String(), nullable=True),
    sa.Column('postBody', sa.String(), nullable=True),
    sa.Column('postDate', sa.String(length=50), nullable=True),
    sa.Column('postPerms', sa.Integer(), nullable=True),
    sa.Column('viewCount', sa.Integer(), nullable=True),
    sa.Column('postCreatorId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['postCreatorId'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Dataset',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('datasetName', sa.String(), nullable=True),
    sa.Column('datasetGroupId', sa.Integer(), nullable=False),
    sa.Column('numFeatures', sa.Integer(), nullable=True),
    sa.Column('numInstances', sa.Integer(), nullable=True),
    sa.Column('classType', sa.Integer(), nullable=True),
    sa.Column('featuresList', sa.String(), nullable=True),
    sa.Column('datasetFor', sa.String(), nullable=True),
    sa.Column('data', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['datasetGroupId'], ['DatasetGroup.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('results', sa.String(), nullable=True),
    sa.Column('pars', sa.String(), nullable=True),
    sa.Column('type', sa.String(length=200), nullable=True),
    sa.Column('startDateTime', sa.String(length=50), nullable=True),
    sa.Column('endDateTime', sa.String(length=50), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('expModelsFileName', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Repos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ExperimentPrediction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expId', sa.Integer(), nullable=False),
    sa.Column('datasetName', sa.String(), nullable=True),
    sa.Column('predDateTime', sa.String(length=50), nullable=True),
    sa.Column('predResult', sa.String(), nullable=True),
    sa.Column('data', sa.String(), nullable=True),
    sa.Column('predType', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['expId'], ['Experiment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('PostComment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('postId', sa.Integer(), nullable=False),
    sa.Column('commentText', sa.String(), nullable=True),
    sa.Column('inReplyTo', sa.Integer(), nullable=True),
    sa.Column('commentorId', sa.Integer(), nullable=True),
    sa.Column('commentorName', sa.String(), nullable=True),
    sa.Column('commentorEmail', sa.String(), nullable=True),
    sa.Column('commentDate', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['postId'], ['BlogPost.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('PostLike',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('postId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['postId'], ['BlogPost.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CommentVote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('commentId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
	sa.Column('isUpVote', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['commentId'], ['PostComment.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('CommentVote')
    op.drop_table('PostLike')
    op.drop_table('PostComment')
    op.drop_table('ExperimentPrediction')
    op.drop_table('Repos')
    op.drop_table('Experiment')
    op.drop_table('Dataset')
    op.drop_table('BlogPost')
    op.drop_table('User')
    op.drop_table('DatasetGroup')
    # ### end Alembic commands ###
